<?php

namespace Alyosha\Modules\IrcSecurity;

use Alyosha\Config;
use Alyosha\Core\Event;
use Alyosha\Core\ModuleInterface;
use Alyosha\Modules\IRC\IrcEvent;

class IrcSecurityModule implements ModuleInterface {
    private $events = [];

    private $adminHostnames = [];

    /**
     * @return array
     * Return the names of the events the module is listening to
     */
    public function getTriggers()
    {
        return [
            'irc.private_message',
            'irc.public_message'
        ];
    }

    /**
     * Execute warm-up of the module, like connections to database or similar
     */
    public function fire(){}

    /**
     * @return array
     * Return events generated by the module.
     */
    public function getEvents()
    {
        $events = $this->events;
        $this->events = [];

        return $events;
    }

    /**
     * @param Event $event
     * Listen on irc events to discern if the admin is speaking or if someone want to access admin privileges
     */
    public function notify(Event $event)
    {
        $hostname = $event->getHostname();

        if (in_array($hostname, $this->adminHostnames)) {
            $this->events[] = $this->createAdminMessageEvent($event);
        } else {
            // nickserv-like auth
            $message = trim($event->getMessage());
            if (0 == strpos($message, ';auth')){
                $this->auth(substr($message, 6), $hostname, $event->getChannel());
            }
        }
    }

    private function createAdminMessageEvent(IrcEvent $event)
    {
        return new AdminEvent($event);
    }

    private function auth($passwd, $hostname, $channel)
    {
        if (Config::$cfg['adminPassword'] == $passwd){
            $this->adminHostnames[] = $hostname;
            $this->events[] = $this->publishAuthSuccess($channel);
        }
    }

    private function publishAuthSuccess($channel)
    {
        $event = new IrcEvent();
        $event->setName("irc.publish");
        $event->setChannel($channel);
        $event->setMessage("Vous êtes bien authentifié.");

        return $event;
    }

    /**
     * @return string
     * Return module name, mostly for debug
     */
    public function getName()
    {
        return 'irc_secure';
    }
}
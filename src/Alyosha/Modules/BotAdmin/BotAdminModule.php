<?php

namespace Alyosha\Modules\BotAdmin;

use Alyosha\Core\Config;
use Alyosha\Core\Event;
use Alyosha\Core\ModuleInterface;
use Alyosha\Modules\IRC\IrcCommand;

class BotAdminModule implements ModuleInterface
{
    private $events = [];

    /**
     * @return array
     * Return the names of the events the module is listening to
     */
    public function getTriggers()
    {
        return [
            "irc.admin_message",
            "irc.motd_end",
        ];
    }

    /**
     * Execute warm-up of the module, like connections to database or similar
     */
    public function fire(){}

    /**
     * @return array
     * Return events generated by the module.
     */
    public function getEvents()
    {
        $events = $this->events;
        $this->events = [];

        return $events;
    }

    /**
     * @param Event $event
     * - join #chan
     * - quit message
     * - leave #chan
     */
    public function notify(Event $event)
    {
        if ($event->getName() == "irc.admin_message"){
            $message = explode(' ',$event->getMessage());
            $type = array_shift($message);
            switch($type){
                case ';join':
                    $command = new IrcCommand("JOIN ".implode($message));
                    $this->events[] = $command;
                    break;
                case ';leave':
                    $command = new IrcCommand("PART ".implode($message));
                    $this->events[] = $command;
                    break;
                case ';quit':
                    $command = new IrcCommand("QUIT ".implode($message));
                    $command->sendHaltSignal();
                    $this->events[] = $command;
                    break;
            }
        } elseif ($event->getName() == "irc.motd_end") {
            foreach(Config::$cfg['chans'] as $chan){
                $command = new IrcCommand("JOIN ".$chan);
                $this->events[] = $command;
            }
        }
    }

    /**
     * @return string
     * Return module name, mostly for debug
     */
    public function getName()
    {
        return 'irc_bot_admin';
    }
}